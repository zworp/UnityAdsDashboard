<!DOCTYPE html>
<html>

	<head>

		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<title>Devm Dashboard</title>
		<style type="text/css">
			<!--
			html, body {
				background-color: #222;
				color: #CCC;
				font-family:Verdana, Arial, Helvetica, sans-serif;
				font-size:13px;
				text-align: center;
			}

			td
			{
				background-color: #444;
				padding: 5px;
				margin: 5px;
			}

			.revenue
			{
				color:#fa3;
			}

			a:link {
				color:#ffa;
			}

			a:visited {
				color:#ffa;
			}
			-->
			</style>
	</head>
	
<body>


<div id="options" style="text-align: center;">

	<div id="apiKey" action="" method="get">
		<form>
			Enter your API Key: 
			<input type="text" name="apiKey">
			<input type="submit" value="Submit">
		</form>
	</div>

	<p>
		<a id="1d" href="#" onclick="loadDataSet(1);">24 hours</a> 
		<a id="7d" href="#" onclick="loadDataSet(7);">7 days</a> 
		<a id="30d" href="#" onclick="loadDataSet(30);">30 days</a>
		<a id="1000d" href="#" onclick="loadDataSet(1000);">1000 days</a>
	</p>

</div>

<div id="debug" style="font-size:11px; color:#888">
</div>

<div id="stats1">
</div>

<div id="stats2">
</div>

<!--
<div style="text-align: center;">
	<canvas id="graphCanvas" width="800" height="300"> Your browser does not support the HTML5 canvas tag.
	</canvas>
</div>
-->

<script>

// Docs
// https://unityads.unity3d.com/help/monetization/stats-api

var isoCountries = { 'AF' : 'Afghanistan', 'AX' : 'Aland Islands', 'AL' : 'Albania', 'DZ' : 'Algeria', 'AS' : 'American Samoa', 'AD' : 'Andorra', 'AO' : 'Angola', 'AI' : 'Anguilla', 'AQ' : 'Antarctica', 'AG' : 'Antigua And Barbuda', 'AR' : 'Argentina', 'AM' : 'Armenia', 'AW' : 'Aruba', 'AU' : 'Australia', 'AT' : 'Austria', 'AZ' : 'Azerbaijan', 'BS' : 'Bahamas', 'BH' : 'Bahrain', 'BD' : 'Bangladesh', 'BB' : 'Barbados', 'BY' : 'Belarus', 'BE' : 'Belgium', 'BZ' : 'Belize', 'BJ' : 'Benin', 'BM' : 'Bermuda', 'BT' : 'Bhutan', 'BO' : 'Bolivia', 'BA' : 'Bosnia And Herzegovina', 'BW' : 'Botswana', 'BV' : 'Bouvet Island', 'BR' : 'Brazil', 'IO' : 'British Indian Ocean Territory', 'BN' : 'Brunei Darussalam', 'BG' : 'Bulgaria', 'BF' : 'Burkina Faso', 'BI' : 'Burundi', 'KH' : 'Cambodia', 'CM' : 'Cameroon', 'CA' : 'Canada', 'CV' : 'Cape Verde', 'KY' : 'Cayman Islands', 'CF' : 'Central African Republic', 'TD' : 'Chad', 'CL' : 'Chile', 'CN' : 'China', 'CX' : 'Christmas Island', 'CC' : 'Cocos (Keeling) Islands', 'CO' : 'Colombia', 'KM' : 'Comoros', 'CG' : 'Congo', 'CD' : 'Congo, Democratic Republic', 'CK' : 'Cook Islands', 'CR' : 'Costa Rica', 'CI' : 'Cote D\'Ivoire', 'HR' : 'Croatia', 'CU' : 'Cuba', 'CY' : 'Cyprus', 'CZ' : 'Czech Republic', 'DK' : 'Denmark', 'DJ' : 'Djibouti', 'DM' : 'Dominica', 'DO' : 'Dominican Republic', 'EC' : 'Ecuador', 'EG' : 'Egypt', 'SV' : 'El Salvador', 'GQ' : 'Equatorial Guinea', 'ER' : 'Eritrea', 'EE' : 'Estonia', 'ET' : 'Ethiopia', 'FK' : 'Falkland Islands (Malvinas)', 'FO' : 'Faroe Islands', 'FJ' : 'Fiji', 'FI' : 'Finland', 'FR' : 'France', 'GF' : 'French Guiana', 'PF' : 'French Polynesia', 'TF' : 'French Southern Territories', 'GA' : 'Gabon', 'GM' : 'Gambia', 'GE' : 'Georgia', 'DE' : 'Germany', 'GH' : 'Ghana', 'GI' : 'Gibraltar', 'GR' : 'Greece', 'GL' : 'Greenland', 'GD' : 'Grenada', 'GP' : 'Guadeloupe', 'GU' : 'Guam', 'GT' : 'Guatemala', 'GG' : 'Guernsey', 'GN' : 'Guinea', 'GW' : 'Guinea-Bissau', 'GY' : 'Guyana', 'HT' : 'Haiti', 'HM' : 'Heard Island & Mcdonald Islands', 'VA' : 'Holy See (Vatican City State)', 'HN' : 'Honduras', 'HK' : 'Hong Kong', 'HU' : 'Hungary', 'IS' : 'Iceland', 'IN' : 'India', 'ID' : 'Indonesia', 'IR' : 'Iran, Islamic Republic Of', 'IQ' : 'Iraq', 'IE' : 'Ireland', 'IM' : 'Isle Of Man', 'IL' : 'Israel', 'IT' : 'Italy', 'JM' : 'Jamaica', 'JP' : 'Japan', 'JE' : 'Jersey', 'JO' : 'Jordan', 'KZ' : 'Kazakhstan', 'KE' : 'Kenya', 'KI' : 'Kiribati', 'KR' : 'Korea', 'KW' : 'Kuwait', 'KG' : 'Kyrgyzstan', 'LA' : 'Lao People\'s Democratic Republic', 'LV' : 'Latvia', 'LB' : 'Lebanon', 'LS' : 'Lesotho', 'LR' : 'Liberia', 'LY' : 'Libyan Arab Jamahiriya', 'LI' : 'Liechtenstein', 'LT' : 'Lithuania', 'LU' : 'Luxembourg', 'MO' : 'Macao', 'MK' : 'Macedonia', 'MG' : 'Madagascar', 'MW' : 'Malawi', 'MY' : 'Malaysia', 'MV' : 'Maldives', 'ML' : 'Mali', 'MT' : 'Malta', 'MH' : 'Marshall Islands', 'MQ' : 'Martinique', 'MR' : 'Mauritania', 'MU' : 'Mauritius', 'YT' : 'Mayotte', 'MX' : 'Mexico', 'FM' : 'Micronesia, Federated States Of', 'MD' : 'Moldova', 'MC' : 'Monaco', 'MN' : 'Mongolia', 'ME' : 'Montenegro', 'MS' : 'Montserrat', 'MA' : 'Morocco', 'MZ' : 'Mozambique', 'MM' : 'Myanmar', 'NA' : 'Namibia', 'NR' : 'Nauru', 'NP' : 'Nepal', 'NL' : 'Netherlands', 'AN' : 'Netherlands Antilles', 'NC' : 'New Caledonia', 'NZ' : 'New Zealand', 'NI' : 'Nicaragua', 'NE' : 'Niger', 'NG' : 'Nigeria', 'NU' : 'Niue', 'NF' : 'Norfolk Island', 'MP' : 'Northern Mariana Islands', 'NO' : 'Norway', 'OM' : 'Oman', 'PK' : 'Pakistan', 'PW' : 'Palau', 'PS' : 'Palestinian Territory, Occupied', 'PA' : 'Panama', 'PG' : 'Papua New Guinea', 'PY' : 'Paraguay', 'PE' : 'Peru', 'PH' : 'Philippines', 'PN' : 'Pitcairn', 'PL' : 'Poland', 'PT' : 'Portugal', 'PR' : 'Puerto Rico', 'QA' : 'Qatar', 'RE' : 'Reunion', 'RO' : 'Romania', 'RU' : 'Russian Federation', 'RW' : 'Rwanda', 'BL' : 'Saint Barthelemy', 'SH' : 'Saint Helena', 'KN' : 'Saint Kitts And Nevis', 'LC' : 'Saint Lucia', 'MF' : 'Saint Martin', 'PM' : 'Saint Pierre And Miquelon', 'VC' : 'Saint Vincent And Grenadines', 'WS' : 'Samoa', 'SM' : 'San Marino', 'ST' : 'Sao Tome And Principe', 'SA' : 'Saudi Arabia', 'SN' : 'Senegal', 'RS' : 'Serbia', 'SC' : 'Seychelles', 'SL' : 'Sierra Leone', 'SG' : 'Singapore', 'SK' : 'Slovakia', 'SI' : 'Slovenia', 'SB' : 'Solomon Islands', 'SO' : 'Somalia', 'ZA' : 'South Africa', 'GS' : 'South Georgia And Sandwich Isl.', 'ES' : 'Spain', 'LK' : 'Sri Lanka', 'SD' : 'Sudan', 'SR' : 'Suriname', 'SJ' : 'Svalbard And Jan Mayen', 'SZ' : 'Swaziland', 'SE' : 'Sweden', 'CH' : 'Switzerland', 'SY' : 'Syrian Arab Republic', 'TW' : 'Taiwan', 'TJ' : 'Tajikistan', 'TZ' : 'Tanzania', 'TH' : 'Thailand', 'TL' : 'Timor-Leste', 'TG' : 'Togo', 'TK' : 'Tokelau', 'TO' : 'Tonga', 'TT' : 'Trinidad And Tobago', 'TN' : 'Tunisia', 'TR' : 'Turkey', 'TM' : 'Turkmenistan', 'TC' : 'Turks And Caicos Islands', 'TV' : 'Tuvalu', 'UG' : 'Uganda', 'UA' : 'Ukraine', 'AE' : 'United Arab Emirates', 'GB' : 'United Kingdom', 'US' : 'United States', 'UM' : 'United States Outlying Islands', 'UY' : 'Uruguay', 'UZ' : 'Uzbekistan', 'VU' : 'Vanuatu', 'VE' : 'Venezuela', 'VN' : 'Viet Nam', 'VG' : 'Virgin Islands, British', 'VI' : 'Virgin Islands, U.S.', 'WF' : 'Wallis And Futuna', 'EH' : 'Western Sahara', 'YE' : 'Yemen', 'ZM' : 'Zambia', 'ZW' : 'Zimbabwe' };  




var API_URL = "http://gameads-admin.applifier.com/stats/monetization-api";

var LIST_GAME = 1;
var LIST_REGION = 2;

var SPLIT_NONE = "none";
var SPLIT_SOURCE = "source";
var SPLIT_REGION = "country";
var SPLIT_ZONE = "zone";

var TIME_ALL = "all";

var apiKey = null;

var sourceIds = null;

var params = parseGet();


apiKey = params["apiKey"];




function loadRaw(url)
{
	var xmlhttp = new XMLHttpRequest();

	xmlhttp.onreadystatechange = function() {
		if (xmlhttp.readyState == XMLHttpRequest.DONE ) {
			if (xmlhttp.status == 200) {
				document.getElementById("stats2").innerHTML = "<pre style=\"text-align: left;\">"+xmlhttp.responseText+"</pre>";
			}else{
				document.getElementById("stats2").innerHTML = "http status code: " + xmlhttp.status;
			}
		}
	};

	xmlhttp.open("GET", url, true);
	xmlhttp.send();
}

function loadData(listType, targetDiv, days) {

	if(apiKey == null){

		document.getElementById(targetDiv).innerHTML = "Missing API Key!";
		return;
	}


	document.getElementById(targetDiv).innerHTML = "Loading...";

	document.getElementById("1d").style.fontWeight = days == 1 ? "bolder" : "normal";
	document.getElementById("7d").style.fontWeight = days == 7 ? "bolder" : "normal";
	document.getElementById("1000d").style.fontWeight = days == 1000 ? "bolder" : "normal";

	document.getElementById("1d").style.textDecoration = days == 1 ? "underline overline" : "";
	document.getElementById("7d").style.textDecoration = days == 7 ? "underline overline" : "";
	document.getElementById("30d").style.textDecoration = days == 30 ? "underline overline" : "";
	document.getElementById("1000d").style.textDecoration = days == 1000 ? "underline overline" : "";



	var now = new Date(Date.now());

	var start = addTime(now, -days*24).toISOString();
	var end = addTime(now, 1).toISOString();


	var req = {};
	req["apikey"] = apiKey;
	req["start"] = start;
	req["end"] = end;

	if(listType == LIST_GAME){
		req["splitBy"] = SPLIT_SOURCE;
		req["scale"] = TIME_ALL;
	}else if(listType == LIST_REGION){
		req["splitBy"] = SPLIT_REGION;
		req["scale"] = TIME_ALL;
	}

	if (sourceIds != null)
		req["sourceIds"] = sourceIds;

	var url = buildApiUrl(req);

	var xmlhttp = new XMLHttpRequest();

	xmlhttp.onreadystatechange = function() {
		if (xmlhttp.readyState == XMLHttpRequest.DONE ) {
			if (xmlhttp.status == 200) {
				drawData(xmlhttp.responseText, listType, targetDiv, req);
			}else{
				document.getElementById(targetDiv).innerHTML = "http status code: " + xmlhttp.status;
			}
		}
	};

	xmlhttp.open("GET", url, true);
	xmlhttp.send();


}

function drawData(csvData, listType, targetDiv, request)
{

	var html = "<p>From: "+ new Date(request["start"]).toLocaleString() +
				" To: "+ new Date(request["end"]).toLocaleString()+" (local time)</p>";

	var rows = csvData.split("\n");

	document.getElementById("debug").innerHTML = "csv rows: " + rows.length;

	var header = rows[0].split(",");


	var iCountry = header.indexOf("Country code");

	var iAdrequests = header.indexOf("adrequests");
	var iAvailable = header.indexOf("available");
	var iStarted = header.indexOf("started");
	var iRevenue = header.indexOf("revenue");


	var iSourceId = header.indexOf("Source game id");
	var iSourceName = header.indexOf("Source game name");

	var totalRevenue = 0.0;
	

	if(listType == LIST_GAME){

		html += "<table style=\"margin: 0 auto;\"><tr>";

	}else if(listType == LIST_REGION){

			html += "<table style=\"text-align: left; margin: 0 auto;\"><tr>"+
				"<td>Country</td>"+
				"<td>Ad requests</td>"+
				"<td>Fillrate</td>"+
				"<td>eCPM</td>"+
				"<td>Revenue</td>"+
			"</tr>";
	}

	for (var i = 1; i < rows.length - 1; i++){
		var columns = rows[i].split(',');

		if(listType == LIST_GAME){

			if((i-1) % 5 == 0 && i>1)
				html += "</tr><tr>";

			var req = {};
			req["apikey"] = request["apikey"];
			req["start"] = request["start"];
			req["end"] = request["end"];
			req["sourceIds"] = columns[iSourceId];
			req["splitBy"] = SPLIT_ZONE;
			req["scale"] = TIME_ALL;
			var gameUrl = buildApiUrl(req);

			var htmlEntry = "<td>";

			htmlEntry += "<a href=\"#\" onclick=\"loadRaw('" +gameUrl+ "');\">"+cleanString(columns[iSourceName]) + "</a><br/><small>(" +columns[iSourceId]+ ")</small> <br/>" +
							formatCurrency(columns[iRevenue]) +"<br/>";

			var fillRate = formatFillrate(columns[iAvailable] / columns[iAdrequests]);

			var eCpm = "$"+ ((cleanString(columns[iRevenue]) / columns[iStarted])*1000).toFixed(2);

			htmlEntry += 	"<small>"+
								"Ad requests: " + formatNumber(columns[iAdrequests]) + "<br/>" +
								"Ad starts: " + formatNumber(columns[iStarted]) + "<br/>" +
								"Fillrate: " + fillRate + "<br/>" +
								"eCPM: " + eCpm + 
							"</small>";

			htmlEntry += "</td>";

			html += htmlEntry;

		}else if(listType == LIST_REGION){

			if(columns[iAdrequests] == 0)
				continue;

			var fillRate = formatFillrate(columns[iAvailable] / columns[iAdrequests]);

			var eCpm = "$"+ ((cleanString(columns[iRevenue]) / columns[iStarted])*1000).toFixed(2);

			var htmlEntry = "<tr>"+
						 	"<td>" + getCountryName(cleanString(columns[iCountry])) + "</td>" +
							"<td>" + formatNumber(columns[iAdrequests]) + "</td>" +
							"<td>" + fillRate + "</td>"+
							"<td>" + eCpm + "</td>"+
							"<td>" + formatCurrency(columns[iRevenue]) +"</td>"+
							"</tr>";

			html += htmlEntry;

		}else{

			html += columns[iRevenue] + ", ";	

		}
		
		totalRevenue += parseFloat(cleanString(columns[iRevenue]));
	}

	if(listType == LIST_GAME)
		html += "</tr>";

	html += "</table>";

	html += "<p>Total revenue: <strong>"+formatCurrency(totalRevenue.toFixed(2))+"</strong> </p>";

	document.getElementById(targetDiv).innerHTML = html;
}

function buildApiUrl(params)
{
	var url = API_URL + "?";

	for (var key in params){
		url += key + "=" + params[key] + "&";
	}
	return url;
}

function cleanString(str)
{
	return str.split('"').join('');
}

function addTime(date, hours)
{
	return new Date(date.getTime() + hours*60*60000);
}

function parseGet()
{
	var parts = location.search.substring(1).split("&");
	var params = {};

	for (var i = 0; i < parts.length; i++) {
	    var nv = parts[i].split("=");
	    if (!nv[0]) 
	    	continue;
	    params[nv[0]] = nv[1];
	}
	return params;
}

function getCountryName (countryCode) {     
    if (isoCountries.hasOwnProperty(countryCode)) {
     return isoCountries[countryCode];
    } else {
        return countryCode;
    } 
}

function formatNumber(num)
{
	return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}

function formatFillrate(num)
{
	var fillRateStr = (num*100).toFixed(1) + "%";
	if(num < 0.9)
		fillRateStr = "<span style=\"color: #f20;\">" + fillRateStr + "</span>";
	return fillRateStr;
}

function formatCurrency(num)
{
	return "<span class='revenue'>$" + formatNumber(cleanString(num)) +"</span>";
}

function loadDataSet(days)
{
	loadData(LIST_GAME, "stats1", days);
	loadData(LIST_REGION, "stats2", days);
}

if(apiKey != null){


	loadDataSet(1);

	document.getElementById("apiKey").innerHTML = "";

}


</script>

</body>
</html>

